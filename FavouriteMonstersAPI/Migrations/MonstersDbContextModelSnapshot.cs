// <auto-generated />
using System;
using FavouriteMonstersAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FavouriteMonstersAPI.Migrations
{
    [DbContext(typeof(MonstersDbContext))]
    partial class MonstersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FavouriteMonstersAPI.Models.Elements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Elements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4087205-12df-40a1-98f6-76f47096c2bb"),
                            Color = "#cf3b47",
                            Name = "Fire"
                        },
                        new
                        {
                            Id = new Guid("e8aa0f1f-b4ab-4564-8d39-efd7d3b744c7"),
                            Color = "#4f6cd0",
                            Name = "Water"
                        },
                        new
                        {
                            Id = new Guid("93174018-3f75-41d6-b33f-cd02fee92e9f"),
                            Color = "#5d7a28",
                            Name = "Grass"
                        },
                        new
                        {
                            Id = new Guid("0dbce28a-6e37-4b19-80e0-4d5300a425d1"),
                            Color = "#ffbf00",
                            Name = "Electric"
                        });
                });

            modelBuilder.Entity("FavouriteMonstersAPI.Models.Monsters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("ElementId")
                        .HasColumnType("char(36)");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("FavouriteMonstersAPI.Models.TeamMonsters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MonsterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("TeamMonsters");
                });

            modelBuilder.Entity("FavouriteMonstersAPI.Models.Teams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FavouriteMonstersAPI.TokenAuthentication.Token", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Value");

                    b.ToTable("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
